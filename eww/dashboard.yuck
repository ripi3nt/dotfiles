(defvar dashboard false)

(defwindow profile
           :monitor 0
           :geometry (geometry :x "350px"
                               :y "100px"
                               :width "250px"
                               :height "250px"
                               )
           :stacking "fg"
           (profile)
)

(defwidget profile[]
  (box
    :class "profile"
    :orientation "v"
    :valign "center"
    :halign "center"
    (box :class "big-pfp")
    (label :text "ripient" :style "font-size: 24px; font-weight:bold")
  )
)

(defwindow notifications
           :monitor 0
           :geometry (geometry :x "350px"
                               :y "360px"
                               :width "250px"
                               :height "170px"
                               )
           :stacking "fg"
           (notifications)
)

(defvar notifications "[1, 2 ,3]")

(defwidget notifications[]
  (box
    :class "notifications"
    :orientation "v"
    :valign "start"
    :halign "start"
    (label :style "font-size: 18px"  :text "Notifications:")
      (box
        :orientation "v"
        (for entry in notifications
          (label :text "- ${entry}" :xalign 0.1)
        )
      )
  )
)

(defwindow music
           :monitor 0
           :geometry (geometry :x "610px"
                               :y "100px"
                               :width "200px"
                               :height "250px"
                               )
           :stacking "fg"
           (music)
)

(defpoll song-title :inital "Title" :interval "10s" "mpc current")
(defpoll album-art :inital "" :interval "10s" "~/.scripts/album-art.sh")


(defwidget music[]
  (box
    :class "music"
    :orientation "v"
    :space-evenly false
    :spacing 10
    (image :path "${album-art}" :image-width 200 :image-height 200 :class "album-art")
    (label :text "${song-title}")
    (progress :value 10 :min 0 :max 100 :class "song-progress")
    (box
      :space-evenly true
      (eventbox :onclick "mpc prev" 
        (box
          :class "control-button"
          "󰒮"
        )
      )
      (eventbox :onclick "mpc toggle" 
        (box
          :class "control-button"
          ""
        )
      )
      (eventbox :onclick "mpc next" 
        (box
          :class "control-button"
          "󰒭"
        )
      )
    )
  )

)

(defwindow stats
           :monitor 0
           :geometry (geometry :x "610px"
                               :y "410px"
                               :width "230px"
                               :height "150px"
                               )
           :stacking "fg"
           (stats)
)

(defwidget stats[]
  (box 
    :class "stats"
    :spacing 10
    
    (overlay
      (circular-progress
        :value {EWW_BATTERY["BAT1"].capacity}
        :start-at 0
        :thickness 3
        :clockwise true
        :class "bat-prog"
      )
      
      (label :class "bat-icon" :text "󰁹")
    )
    (overlay
      (circular-progress
        :value {EWW_CPU.avg}
        :start-at 0
        :thickness 3
        :clockwise true
        :class "cpu-prog"
      )
      (label :class "cpu-icon" :xalign 0.46 :text "")
    )
    (overlay
      (circular-progress
        :value {EWW_RAM.used_mem_perc}
        :start-at 0
        :thickness 3
        :clockwise true
        :class "mem-prog"
      )
      
      (label :class "mem-icon" :text "󰍛")
    )
  )
  
)

